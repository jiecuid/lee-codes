
谈谈 Spring 的 IOC

    IOC就是一个容器，我们称之为IOC容器，它的含义是控制反转。在 Spring 官网我们可以看到是这样描述的，我们在使用 Spring 之前都是通过 new 去创建对象，在使用了 Spring 之后，将创建对象的这个过程交给了
Spring，当我们需要使用的时候，就去 Spring的IOC容器里去拿就可以了，这本身就是一个反转的过程。

    IOC容器里存储的是一个个 Bean 对象，Spring 在启动的时候，会根据特定的规则去进行扫描，扫描当前应用是通过配置文件的形式配置的 Bean，还是通过注解的形式配置的Bean。

    当是通过配置文件的形式配置的 Bean 的时候，我们都知道可以将Bean 配置在xml文件里，也可以配置在yaml文件里，也可以配置在property 等文件里，
Spring 会通过一个叫做 BeanDefinitionReader 接口 去读取相应的配置文件返回 BeanDefinitionRegistry,
Spring 它会经过实例化-->填充属性-->初始化前-->初始化-->初始化后（这里如果需要AOP，就会进行AOP生成代理对象）等一系列的操作生成完整的 Bean对象进而创建 Bean对象放入到IOC容器里。
这里的配置文件可以是 xml格式，yaml 格式，property 等，BeanDefinitionReader 接口都会有对应的实现类去读取（XmlBeanDefinitionReader、YamlBeanDefinitionReader、PropertyBeanDefinitionReader）

    当是通过注解的形式配置的Bean的时候，Spring 会以另外一套机制去创建 Bean。首先 Spring 会去扫描配置类，通常也就是加了 @ComponentScan 注解的类，
读取 @ComponentScan 注解所配置的待扫描的包路径，在这个包路径下的所有java类都会被扫描一遍，判断这些java类上是否有 @Component 注解，如果有@Component 注解，
那么Spring就会认为这个类对应的 Bean 需要被放入到IOC容器里，Spring 就会经过实例化-->填充属性-->初始化前-->初始化-->初始化后（这里如果需要AOP，就会进行AOP生成代理对象）
等一系列的操作生成完整的 Bean对象放入到IOC容器里。
